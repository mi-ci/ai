1-+7
10+7
q()
d1 = 1:50
d2 = 51:100
d1
d2
length(d2)
d1+d2
d2-d1
d1*d2
d2/d1
sum(d1)
sum(d2)
sum(d1)+sum(d2)
min(d2)
max(d2)
mean(d1)
mean(d2)
mean(d2)-mean(d1)
sort(d1, decreasing = T)
d3=c(d1[1:10],d2[1:10])
d3
d3=c(sort(d1[1:10]),sort(d2[1:10])
d3
d3=c(d1[1:10],d2[1:10])
d3
d11 = sort(d1,decreasing = F)[1:10]
d22 = sort(d2,decreasing = F)[1:10]
d3=c(d11,d22)
d3
v1 = 51:90
v1[v1<60]
length(v1[v1<70])
sum(v1[v1>65])
v1[v1>60 & v1<73]
for(i in v1){
if(v1%%7=3){
if(i%%7=3){
for(i in v1){
if(i%%7=3){
for(i in v1){
if(i%%7=3){
for(i in v1){
if(i%%7==3){
cat(i +" ")
}
}
cat(i ," ")
for(i in v1){
if(i%%7==3){
cat(i ," ")
}
}
for(i in v1){
if(i%%7==0){
i=0
}
}
v1
for(i in v1){
if(i%%7==0){
i<-0
}
}
v1
for(i in v1){
if(i%%7==0){
v1[i]=0
}
}
v1
v1 = 51:90
for(i in v1){
if(i%%7==0){
v1[i-length(v1)]=0
}
}
v1
v1 = 51:90
for(i in v1){
if(i%%7==0){
v1[i-min(v1)+1]=0
}
}
v1
v1
v1 = 51:90
for(i in v1){
if(i%%7==3){
cat(i ," ")
}
}
for(i in v1){
if(i%%7==0){
v1[i-min(v1)+1]=0
}
}
v1
v1 = 51:90
for(i in v1){
if(i%%7==0){
v1[i-50]=0
}
}
v1
v1 = 51:90
for(i in v1){
if(i%%7==0){
v1[i-(min(v1)-1)]=0
}
}
v1
v1 = 51:90
for(i in v1){
if(i%%7==0){
v1[i-50]=0
}
}
v1
v1[v1>80 | v1<65]
v1[v1>80 | v1<65]
v1 = 51:90
v1[v1%%7==3]
v1[v1%%7==0]
v1[v1%%7==0] = 0
v1
sum(v1[v1%%2==0])
v1[v1%%2==1 | v1>80]
v1[v1%%3=0 | v1%%5=0]
v1[v1%%3==0 | v1%%5==0]
v1[v1%%2==0] = v1[v1%%2==0]*2
v1
v1[v1%%7==0] = null
v1[v1%%7==0] = NULL
v1 = 51:90
v1 - v1[v1%%7==0]
v1[v1%%7==0]
v1[!v1%%7==0]
ds = c(90,85,70,84)
my.info = list(name="Tom", age=60, status=TRUE, score=ds)
my.info
my.info$score
bt = c('A', 'B', 'B', 'O', 'AB')
bt.new = factor(bt)
bt.new
bt.new[1:3]
levels(bt.new)
as.integer(bt.new)
bt.new[6]='A'
bt.new
bt.new[7]='O'
bt.new
bt.new[8]='C'
nn.new = factor(nn)
nn = c('동', '서', '남', '북', '북', '북')
nn.new = factor(nn)
nn.new
as.integer(nn.new)
nn.new[7]='동'
nn.new
a = 4
b = 5
c=a+b
c
x=6
x=8
x=10
y=2*2+5*x+10
y
x=6
y
x=8
y
x=6
y
x=8
y
x=10
y
val.a = 10
val.b
val.a = 10
val.b=10
sum.ab = val.a+val.b
sum.ab
vc.1 = c(95, 86, 47, 55, 68)
vc.1
x=8
y=2*2+5*x+10
val.a = 10
y
x=8
y=2*2+5*x+10
y
x=6
y=2*2+5*x+10
y
matrix(1:30, hrow=5, hcol=10)
matrix(1:30, hrow=5, hcol=6)
matrix(101:200, nrow=10, ncol=10)
x = 1:5
x
y = 8:12
y
sum.xy = cbind(x,y)
sum.xy
matrix(1:30, hrow=5, hcol=6, byrow=T)
matrix(1:30, nrow=5, ncol=6, byrow=T)
sum.xy1 = rbind(x,y)
sum.xy1
a=1:5
b=101:105
c=201:205
sum.abc = rbind(a,b,c)
sum.abc
a=12:9
b=8:5
c=4:1
sum.abc = rbind(a,b,c)
sum.abc
z = matrix(12:1, nrow=3, ncol=4)
z
z = matrix(12:1, nrow=3, ncol=4 byrow=T)
z
z = matrix(12:1, nrow=3, ncol=4, byrow=T)
z
rownames(z) = c('v1','v2','v3')
z
sum.abc
z(1,3)
z[2,4]
z[1,]
z[,2]
z[1]+z[2]
z[,2:3]
z[c(2,4),]
z[c(2,4),]
z[,c(2,4)]
score = matrix(c(90,85,69,78,85,96,49,95,90,80,70,60), nrow=4, ncol=3)
score
rownames(score) = c('John', 'Tom', 'Mark', 'Jane')
score
colnames(score) = c('국어', '영어', '수학')
score
score['Jane','국어']
score['국어','Jane']
mean(score['수학'])
mean(score[,'수학'])
score
mean(score[,'수학']) as m
rownames(score)
rownames(score)[1]
rownames(score)[2]
z = matrix(12:1, nrow=3, ncol=4, byrow=T)
z
colnames(z) = c('a1','a2','a3','a4')
z
v1=1:7
z = rbind(z,v1[v1%%2==1])
z
z[4,]
z[2:4,c(1,3)]
rownames(z)[3]
colnames(z)[3]
city = c('서울', '도쿄', '워싱턴')
rank= c(1,3,2)
etc = c(T, T, F)
city.info = data.frame(city, rank, etc )
city.info
city.info[2,1]
colnames(city.info)
iris
head(iris, n=10)
tail(iris)
head(iris[, c(1:2)])
head(iris[, "Petal.Width"])
dim(iris)
unique(iris[,5])
iris[,5]
iris
table(iris[,"Species"])
colSums(iris[,])
colSums(iris[,-5])
rowMeans(iris,[,-5])
rowsums(iris,[,-5])
rowsums(iris[,-5])
rowsums(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
st=data.frame(state.x77)
st
head(st)
dim(st)
str(st)
rownames(st)
colnames(st)
dim(st)
dim(st)[1]
str(st)
rowSums(st)
colSums(st)
colMeans(st)
colSums(st)
st['Florida']
st['Florida',]
st[,'Icome']
st[,'Income']
st['Texas','Area']
st['Ohio',c('Population','Income')]
st['Population'>5000]
st['Population']
st[st['Population']>5000]
st['Population']
st['Population',]
st['Population']
table(iris[,"Species"])
[st['Population']]
st[st['Population']]
st[1]
st[1,2]
st[1,]
st[1]
st[1]
st[1,]
st[1,1]
st[,1]
st[st[,1]>5000]
st[,1]>5000
st
st[,1]
rownames(st)
st[,1]>5000
st[st[,1]>5000,1]
st[st[,1]>5000,2]
st[st[,1]>5000,]
st[st[,2]>4500,c(1,2,8)]
dim(st[st[,2]>4500,c(1,2,8)])[1]
st[st[,8]>100000&st[,7]>120,]
st[st[,1]<2000&st[,5]<12,]
st[st[,3]>2,2]
st[st[,1]<2000&st[,5]<12,]
st[st[,3]>2,2]
st[st[,3]>2,]
st[st[,3]>2,][,2]
st[st[,3]>2,2]
mean(st[st[,3]>2,2])
mean(st[st[,3]>=2,2])-mean(st[st[,3]<2,2])
abs(mean(st[st[,3]>=2,2])-mean(st[st[,3]<2,2]))
st
st[,4]
max(st[,4])
max(st[,4],)
st[max(st[,4]),]
st[max(st[,4])]
st[,max(st[,4])]
st[max(st[,4]),]
st[max(st[,4])]
max(st[,4])
st[st==max(st[,4]),]
st[,st==max(st[,4])]
st[st==max(st[,4]),]
st[st[,4]==max(st[,4]),]
st['Pennsylvania']
st['Pennsylvania',]
st['Pennsylvania',2]
st['Pennsylvania',2]
st[st[,2]>st['Pennsylvania',2],]
rownames(st[st[,2]>st['Pennsylvania',2],])
city.info
t(city.info)
subset(st, Population>=5000)
subset(st, Population>=5000)
subset(st, Income>4500)
subset(st, Income>4500)[1,2,8]
subset(st, Income>4500)[,c(1,2,8)]
dim(subset(st, Income>4500))[1]
class(iris)
is.matrix(iris)
is.data.frame(iris)
class(st)
class(iris)
iris.matrix = as.matrix(iris)
class(iris.matrix)
iris.matrix
st
iris.matrix
iris.matrix
iris$[5]
iris$5
iris$Species
human = data.frame(name,age,gender,height,student)
name = c('Tom', 'Jane', 'Nick')
age = c(20,23,26)
height = c(180,160,175)
student = c(T,T,F)
human = data.frame(name,age,gender,height,student)
gender = c('M',"F",'M')
human = data.frame(name,age,gender,height,student)
human
human.new = list(name='Mary', age=24, gender='F', height=155, student=T)
human.new
human = rbind(human, human.new)
human
str(human)
dim(human)
class(human)
mean(human$age)
human['age']
human[,'age']
human[2]
human[,2]
mean(human$height)
colnames(human)
colnames(human[-4])
table(human$gender)
air
air = read.csv('airquality.csv')
setwd("C:\ai\study\r_study") #파일 불러올 경로
air = read.csv('airquality.csv')
air
setwd("C:\ai\study\r_study") #파일 불러올 경로
setwd("C:/ai/study/r_study") #파일 불러올 경로
air = read.csv('airquality.csv')
air
class(air)
air['Ozone']
air3=read.csv(file.choose())
head(air3)
air3=read.csv(file.choose())
head(air3)
iris.setosa = subset(iris,Species=='setosa')
iris.setosa
write.csv(iris.setosa, 'irisfilename.csv')
write.csv(iris.setosa, 'irisFile1.csv', row.names = F)
write.csv(iris.setosa, file.choose())
